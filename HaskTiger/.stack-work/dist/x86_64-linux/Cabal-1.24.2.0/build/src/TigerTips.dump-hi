
==================== FINAL INTERFACE ====================
2017-09-07 00:00:07.300001 UTC

interface HaskTiger-0.1.0.0-1NjWJIneMSYKOEJS7DxzEs:TigerTips 8002
  interface hash: b7085864d8f7a79f0e0fecac2b574ede
  ABI hash: 09d0ed1e7b19dae6eb19e766e278976b
  export-list hash: dcb87ec6f83998e086ed321a236f4c98
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  TigerTips.intiposIguales
  TigerTips.RWO{TigerTips.RO TigerTips.RW}
  TigerTips.Tipo{TigerTips.RefRecord TigerTips.TArray TigerTips.TInt TigerTips.TNil TigerTips.TRecord TigerTips.TString TigerTips.TTipo TigerTips.TUnit}
  TigerTips.Unique
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY*
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text
         text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text ef501398810147cc510ae8565b319c23
import  -/  text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text.Internal e17bbef002f291b56b1f76642ff112d3
7a2ffb7e822eb5f8a3b2c661eec94da9
  $fEqRWO :: GHC.Classes.Eq TigerTips.RWO
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ TigerTips.RWO TigerTips.$fEqRWO_$c== TigerTips.$fEqRWO_$c/= -}
7a2ffb7e822eb5f8a3b2c661eec94da9
  $fEqRWO_$c/= :: TigerTips.RWO -> TigerTips.RWO -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: TigerTips.RWO) (b :: TigerTips.RWO) ->
                 case a of wild {
                   TigerTips.RW
                   -> case b of wild1 {
                        TigerTips.RW -> GHC.Types.False TigerTips.RO -> GHC.Types.True }
                   TigerTips.RO
                   -> case b of wild1 {
                        TigerTips.RW -> GHC.Types.True
                        TigerTips.RO -> GHC.Types.False } }) -}
7a2ffb7e822eb5f8a3b2c661eec94da9
  $fEqRWO_$c== :: TigerTips.RWO -> TigerTips.RWO -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: TigerTips.RWO) (ds1 :: TigerTips.RWO) ->
                 case ds of wild {
                   TigerTips.RW
                   -> case ds1 of wild1 {
                        TigerTips.RW -> GHC.Types.True TigerTips.RO -> GHC.Types.False }
                   TigerTips.RO
                   -> case ds1 of wild1 {
                        TigerTips.RW -> GHC.Types.False
                        TigerTips.RO -> GHC.Types.True } }) -}
7a9cbb36fc3301ae9285220ca7aef68d
  $fEqTipo :: GHC.Classes.Eq TigerTips.Tipo
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ TigerTips.Tipo TigerTips.$fEqTipo_$c== TigerTips.$fEqTipo_$c/= -}
7a9cbb36fc3301ae9285220ca7aef68d
  $fEqTipo_$c/= :: TigerTips.Tipo -> TigerTips.Tipo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: TigerTips.Tipo) (b :: TigerTips.Tipo) ->
                 case TigerTips.$fEqTipo_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
7a9cbb36fc3301ae9285220ca7aef68d
  $fEqTipo_$c== :: TigerTips.Tipo -> TigerTips.Tipo -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
7a2ffb7e822eb5f8a3b2c661eec94da9
  $fShowRWO :: GHC.Show.Show TigerTips.RWO
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ TigerTips.RWO
                  TigerTips.$fShowRWO_$cshowsPrec
                  TigerTips.$fShowRWO_$cshow
                  TigerTips.$fShowRWO_$cshowList -}
7a2ffb7e822eb5f8a3b2c661eec94da9
  $fShowRWO1 :: TigerTips.RWO -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: TigerTips.RWO) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   TigerTips.RW
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n TigerTips.$fShowRWO3)
                        eta
                   TigerTips.RO
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n TigerTips.$fShowRWO2)
                        eta }) -}
7c7175cda1badb23212fdef23404d7ab
  $fShowRWO2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RO"#) -}
e9e34e94bd92ff8164a0fddad9c54ec9
  $fShowRWO3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "RW"#) -}
7a2ffb7e822eb5f8a3b2c661eec94da9
  $fShowRWO_$cshow :: TigerTips.RWO -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: TigerTips.RWO) ->
                 case x of wild {
                   TigerTips.RW -> TigerTips.$fShowRWO3
                   TigerTips.RO -> TigerTips.$fShowRWO2 }) -}
7a2ffb7e822eb5f8a3b2c661eec94da9
  $fShowRWO_$cshowList :: [TigerTips.RWO] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ TigerTips.RWO
                   TigerTips.$fShowRWO1) -}
7a2ffb7e822eb5f8a3b2c661eec94da9
  $fShowRWO_$cshowsPrec ::
    GHC.Types.Int -> TigerTips.RWO -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: TigerTips.RWO)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   TigerTips.RW
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n TigerTips.$fShowRWO3)
                        eta
                   TigerTips.RO
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr @ GHC.Types.Char @ b c n TigerTips.$fShowRWO2)
                        eta }) -}
7a9cbb36fc3301ae9285220ca7aef68d
  $fShowTipo :: GHC.Show.Show TigerTips.Tipo
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ TigerTips.Tipo
                  TigerTips.$fShowTipo_$cshowsPrec
                  TigerTips.$fShowTipo_$cshow
                  TigerTips.$fShowTipo_$cshowList -}
7a9cbb36fc3301ae9285220ca7aef68d
  $fShowTipo1 :: TigerTips.Tipo -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (TigerTips.$fShowTipo_$cshowsPrec
                   TigerTips.$fShowTipo2) -}
73f9fca8d0d03c67a8f02810049e0789
  $fShowTipo2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
7a9cbb36fc3301ae9285220ca7aef68d
  $fShowTipo_$cshow :: TigerTips.Tipo -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: TigerTips.Tipo) ->
                 TigerTips.$fShowTipo_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7a9cbb36fc3301ae9285220ca7aef68d
  $fShowTipo_$cshowList :: [TigerTips.Tipo] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ TigerTips.Tipo
                   TigerTips.$fShowTipo1) -}
7a9cbb36fc3301ae9285220ca7aef68d
  $fShowTipo_$cshowsPrec ::
    GHC.Types.Int -> TigerTips.Tipo -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U> -}
fc7c62cf7973f1e396f2a9616f90bbeb
  $s$fEq(,,) ::
    GHC.Classes.Eq
      (Data.Text.Internal.Text, TigerTips.Tipo, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (Data.Text.Internal.Text, TigerTips.Tipo, GHC.Types.Int)
                  (GHC.Classes.$fEq(,,)_$c==
                     @ Data.Text.Internal.Text
                     @ TigerTips.Tipo
                     @ GHC.Types.Int
                     Data.Text.$fEqText
                     TigerTips.$fEqTipo
                     GHC.Classes.$fEqInt)
                  TigerTips.$s$fEq(,,)_$s$fEq(,,)_$c/= -}
88c4a32d68747714a139807dfb2dc105
  $s$fEq(,,)_$s$fEq(,,)_$c/= ::
    (Data.Text.Internal.Text, TigerTips.Tipo, GHC.Types.Int)
    -> (Data.Text.Internal.Text, TigerTips.Tipo, GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S(LLS)LL),1*U(1*U(U,U,U),1*U,1*U(U))><S(S(LLS)LL),1*U(1*U(U,U,U),1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ (a1 :: (Data.Text.Internal.Text, TigerTips.Tipo, GHC.Types.Int))
                   (b1 :: (Data.Text.Internal.Text, TigerTips.Tipo, GHC.Types.Int)) ->
                 case GHC.Classes.$fEq(,,)_$c==
                        @ Data.Text.Internal.Text
                        @ TigerTips.Tipo
                        @ GHC.Types.Int
                        Data.Text.$fEqText
                        TigerTips.$fEqTipo
                        GHC.Classes.$fEqInt
                        a1
                        b1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
2fcd047df1f28963632e5f00dcda074d
  $tc'RO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18107130816334269575##
                   9312482768824223179##
                   TigerTips.$trModule
                   TigerTips.$tc'RO1) -}
d4226c4a40ee0fb2d7d4b22b3fcb8ac4
  $tc'RO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RO"#) -}
75db21c3d824f5ef98336a922d1f6560
  $tc'RW :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11174073751283213335##
                   13787303388892547822##
                   TigerTips.$trModule
                   TigerTips.$tc'RW1) -}
0a5a2b8bf26bae85f3b4a83c2f33c07f
  $tc'RW1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RW"#) -}
cd1cd862066be7e2475864d2f84185a3
  $tc'RefRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3664864221493011480##
                   8082355501596473087##
                   TigerTips.$trModule
                   TigerTips.$tc'RefRecord1) -}
585fa2368795fc84bfa3d5c2784381ea
  $tc'RefRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'RefRecord"#) -}
ba272a64694312cf082bb1469e032808
  $tc'TArray :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7243112434150190112##
                   8995088995188156526##
                   TigerTips.$trModule
                   TigerTips.$tc'TArray1) -}
0c2a140820c06add9d32a13929c957c3
  $tc'TArray1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TArray"#) -}
65e6ede28667ad8b59d949cc04bdce11
  $tc'TInt :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10406250853394499141##
                   2500768341288729771##
                   TigerTips.$trModule
                   TigerTips.$tc'TInt1) -}
35088787c7ded70279124a047a588c4c
  $tc'TInt1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TInt"#) -}
a0b26adcb5bda40bf3f77b5d63a62f1d
  $tc'TNil :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11180451295071797266##
                   9041513714774044256##
                   TigerTips.$trModule
                   TigerTips.$tc'TNil1) -}
db5b1fc64f9ee029c05807aa26e152ad
  $tc'TNil1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TNil"#) -}
870e168a86be3a4fedc68cf8c19412ff
  $tc'TRecord :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14719858204182390113##
                   3856859916589828354##
                   TigerTips.$trModule
                   TigerTips.$tc'TRecord1) -}
ccfbc8bf3cbcdbc42a495ffa8cb4e24c
  $tc'TRecord1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TRecord"#) -}
02fbb736f43c9808cfd1230340f7affa
  $tc'TString :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17415063924148623417##
                   14609929779706269154##
                   TigerTips.$trModule
                   TigerTips.$tc'TString1) -}
0c02c6e3f469a08e0b620dbd6ef63efa
  $tc'TString1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TString"#) -}
5c10c71bc2332197585efb4cf9200853
  $tc'TTipo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14729525458086031608##
                   15223889226461234596##
                   TigerTips.$trModule
                   TigerTips.$tc'TTipo1) -}
3d9d1a2ff351189eb26222847220e079
  $tc'TTipo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TTipo"#) -}
a40a802fa9a5b58413b43a92764b543e
  $tc'TUnit :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   214709538329692061##
                   7017716623593571435##
                   TigerTips.$trModule
                   TigerTips.$tc'TUnit1) -}
825be2a344bab6a91dd595c669d06914
  $tc'TUnit1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'TUnit"#) -}
317aa60fb32da48ebc02460eb3e82bcc
  $tcRWO :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2438242412328658914##
                   13164509897858889202##
                   TigerTips.$trModule
                   TigerTips.$tcRWO1) -}
9daab7977788a296c7e72cdabc843f73
  $tcRWO1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "RWO"#) -}
e3cc1ab80d01c935fdde6537d95fd294
  $tcTipo :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14908259351545800790##
                   7930201613690124354##
                   TigerTips.$trModule
                   TigerTips.$tcTipo1) -}
dbc35de39349e4124cd1ae40c28ef913
  $tcTipo1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Tipo"#) -}
d17d125109774aa5b3e45c1a5c0262bd
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TigerTips.$trModule2
                   TigerTips.$trModule1) -}
c1fcb0b2e6665ba6de69e063966095dd
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TigerTips"#) -}
74c53d3d1b26d1e76de16e2440e640ee
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "HaskTiger-0.1.0.0-1NjWJIneMSYKOEJS7DxzEs"#) -}
7a2ffb7e822eb5f8a3b2c661eec94da9
  data RWO = RW | RO
7a9cbb36fc3301ae9285220ca7aef68d
  data Tipo
    = TUnit
    | TNil
    | TInt TigerTips.RWO
    | TString
    | TArray TigerTips.Tipo TigerTips.Unique
    | TRecord [(Data.Text.Internal.Text, TigerTips.Tipo,
                GHC.Types.Int)]
              TigerTips.Unique
    | RefRecord Data.Text.Internal.Text
    | TTipo Data.Text.Internal.Text
9abf1eb79fff2a55d19ebab8178f7d58
  type Unique = GHC.Types.Int
8a641fdb0b0b718d840dbc7e18c22b68
  intiposIguales ::
    TigerTips.Tipo -> TigerTips.Tipo -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: TigerTips.Tipo) (ds1 :: TigerTips.Tipo) ->
                 case ds of wild {
                   DEFAULT
                   -> case ds1 of wild1 {
                        DEFAULT -> TigerTips.$fEqTipo_$c== wild wild1
                        TigerTips.TTipo ds2 -> TigerTips.intiposIguales2 }
                   TigerTips.TNil
                   -> case ds1 of wild1 {
                        DEFAULT -> TigerTips.$fEqTipo_$c== TigerTips.TNil wild1
                        TigerTips.TRecord ds2 ds3 -> GHC.Types.True
                        TigerTips.TTipo ds2 -> TigerTips.intiposIguales2 }
                   TigerTips.TInt ds2
                   -> case ds1 of wild1 {
                        DEFAULT -> TigerTips.$fEqTipo_$c== wild wild1
                        TigerTips.TInt ds3 -> GHC.Types.True
                        TigerTips.TTipo ds3 -> TigerTips.intiposIguales2 }
                   TigerTips.TArray ds2 u1
                   -> case ds1 of wild1 {
                        DEFAULT -> TigerTips.$fEqTipo_$c== wild wild1
                        TigerTips.TArray ds3 u2 -> GHC.Classes.eqInt u1 u2
                        TigerTips.TTipo ds3 -> TigerTips.intiposIguales2 }
                   TigerTips.TRecord ds2 ds3
                   -> case ds1 of wild1 {
                        DEFAULT -> TigerTips.$fEqTipo_$c== wild wild1
                        TigerTips.TNil -> GHC.Types.True
                        TigerTips.TRecord ds4 u2 -> GHC.Classes.eqInt ds3 u2
                        TigerTips.TTipo ds4 -> TigerTips.intiposIguales2 }
                   TigerTips.TTipo ds2 -> TigerTips.intiposIguales1 }) -}
344e0561b2a5af3367f39e92b5b758ac
  intiposIguales1 :: GHC.Types.Bool
  {- Strictness: x -}
dd6c0d36547b7e782092d3c9b69c02ce
  intiposIguales2 :: GHC.Types.Bool
  {- Strictness: x -}
instance [safe] GHC.Classes.Eq [TigerTips.RWO] = TigerTips.$fEqRWO
instance [safe] GHC.Classes.Eq [TigerTips.Tipo]
  = TigerTips.$fEqTipo
instance [safe] GHC.Show.Show [TigerTips.RWO] = TigerTips.$fShowRWO
instance [safe] GHC.Show.Show [TigerTips.Tipo]
  = TigerTips.$fShowTipo
"SPEC/TigerTips $fEq(,,) @ Text @ Tipo @ Int" [ALWAYS] forall ($dEq2 :: GHC.Classes.Eq
                                                                          GHC.Types.Int)
                                                              ($dEq1 :: GHC.Classes.Eq
                                                                          TigerTips.Tipo)
                                                              ($dEq :: GHC.Classes.Eq
                                                                         Data.Text.Internal.Text)
  GHC.Classes.$fEq(,,) @ Data.Text.Internal.Text
                       @ TigerTips.Tipo
                       @ GHC.Types.Int
                       $dEq
                       $dEq1
                       $dEq2
  = TigerTips.$s$fEq(,,)
"SPEC/TigerTips $fEq(,,)_$c/= @ Text @ Tipo @ Int" [ALWAYS] forall ($dEq2 :: GHC.Classes.Eq
                                                                               GHC.Types.Int)
                                                                   ($dEq1 :: GHC.Classes.Eq
                                                                               TigerTips.Tipo)
                                                                   ($dEq :: GHC.Classes.Eq
                                                                              Data.Text.Internal.Text)
  GHC.Classes.$fEq(,,)_$c/= @ Data.Text.Internal.Text
                            @ TigerTips.Tipo
                            @ GHC.Types.Int
                            $dEq
                            $dEq1
                            $dEq2
  = TigerTips.$s$fEq(,,)_$s$fEq(,,)_$c/=
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

