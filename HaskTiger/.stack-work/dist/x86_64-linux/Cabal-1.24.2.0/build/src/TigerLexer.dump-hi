
==================== FINAL INTERFACE ====================
2017-09-10 03:02:16.04692 UTC

interface HaskTiger-0.1.0.0-1NjWJIneMSYKOEJS7DxzEs:TigerLexer 8002
  interface hash: f4240cb311d7172b689d8bf775f880be
  ABI hash: 1879c506a5cb8805bba61e0239c895c1
  export-list hash: b333061e7dcda5def3ff877ded3c869b
  orphan hash: 04cdb91093b98666d78a56b80b766024
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  TigerLexer.braces
  TigerLexer.brackets
  TigerLexer.colon
  TigerLexer.commaSep
  TigerLexer.commaSep1
  TigerLexer.dot
  TigerLexer.identifier
  TigerLexer.lexer
  TigerLexer.number
  TigerLexer.parens
  TigerLexer.reserved
  TigerLexer.reservedOp
  TigerLexer.semiSep
  TigerLexer.semiSep1
  TigerLexer.stringLiteral
  TigerLexer.symbol
  TigerLexer.toInt
  TigerLexer.whiteSpace
module dependencies: TigerAbs TigerSymbol
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-4MSigapSiUw1ERNBXZn0E5
                      text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY*
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text
         text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text
                         text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text.Lazy
import  -/  TigerAbs 37f30c082077bd2ed6390df841315dcd
  exports: 3a90fdff097973025312591ea87ea06f
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  parsec-3.1.11@parsec-3.1.11-4MSigapSiUw1ERNBXZn0E5:Text.Parsec 5ebe4726bd77c5637390cb93da39bc72
import  -/  parsec-3.1.11@parsec-3.1.11-4MSigapSiUw1ERNBXZn0E5:Text.Parsec.Char e53c6aef39f9d1ab625832392fa65cce
import  -/  parsec-3.1.11@parsec-3.1.11-4MSigapSiUw1ERNBXZn0E5:Text.Parsec.Prim 38a967362d6f8ab3f18d4c0a59c3f4b1
import  -/  parsec-3.1.11@parsec-3.1.11-4MSigapSiUw1ERNBXZn0E5:Text.Parsec.Text 8b9622ffa93b22c4a7166fef30d3298e
import  -/  parsec-3.1.11@parsec-3.1.11-4MSigapSiUw1ERNBXZn0E5:Text.Parsec.Token c573ecc2d878d42e48e8b14b66c8c224
import  -/  text-1.2.2.2@text-1.2.2.2-1cn50juu89QSL9QkUVcRY:Data.Text ef501398810147cc510ae8565b319c23
0641a98931ed054698e24eaba6ec8a39
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  (TigerLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok)
                  (TigerLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
5874bcb56c74cb32539acd09c737e7ea
  $s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream ::
    GHC.Base.Monad Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ tok -> Data.Functor.Identity.$fMonadIdentity) -}
4a7b572e86751e93dae1ccc6b4944eec
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Nothing @ (tok, [tok]))
                   : t ts
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Just @ (tok, [tok]) (t, ts)) }) -}
42c68ee98db3fb380e6a9357e8eb4420
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TigerLexer.$trModule2
                   TigerLexer.$trModule1) -}
2cc40abb1b564ee582090446c7c8183f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TigerLexer"#) -}
31876da202c8acc349c52b23295149e9
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "HaskTiger-0.1.0.0-1NjWJIneMSYKOEJS7DxzEs"#) -}
a60fafc1ae5746645215d66ba8b9b3b1
  braces ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds17 @ a }) -}
3d26177978e0edce77ef1bc3d63b48c7
  brackets ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds19 @ a }) -}
08295f55f0363b8b0bc6cf725fec6f73
  colon ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds24 }) -}
18e83c5cb7ea0cb4ec6452c63136e0f8
  commaSep ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds27 @ a }) -}
b2d08c34ee70cc163e7a76efe49821e7
  commaSep1 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds28 @ a }) -}
944d98292fed362cfb814f742019cee6
  dot ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds25 }) -}
a9c706eb2bfe91c268b52928a0eb9342
  identifier ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds1 }) -}
8e3e4e5c81f761ac40a04972e2867bc4
  lexer :: Text.Parsec.Token.TokenParser ()
  {- Unfolding: (Text.Parsec.Token.makeTokenParser
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TigerLexer.lexer1) -}
d3af95b54d81b007f82bacf2b224763a
  lexer1 ::
    Text.Parsec.Token.GenLanguageDef
      GHC.Base.String () Data.Functor.Identity.Identity
  {- Unfolding: (Text.Parsec.Token.LanguageDef
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   TigerLexer.lexer74
                   TigerLexer.lexer73
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.True
                   TigerLexer.lexer70
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TigerLexer.lexer68
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TigerLexer.lexer66
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TigerLexer.lexer64
                   TigerLexer.lexer28
                   TigerLexer.lexer2
                   GHC.Types.False) -}
3afcbbd9a70965995505c9dd21ec2f7f
  lexer10 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer19
                   TigerLexer.lexer11) -}
3251197674ac0ce221484bd733852b24
  lexer11 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer18
                   TigerLexer.lexer12) -}
aae672996219d5b48f641e198e73324a
  lexer12 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer17
                   TigerLexer.lexer13) -}
087bf49c49776b45d33e529c34aecbf8
  lexer13 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer16
                   TigerLexer.lexer14) -}
85c4b4d7dc847bb5d3476e40fb0ef873
  lexer14 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer15
                   (GHC.Types.[] @ GHC.Base.String)) -}
3a7895fcc277608f058ef6a15680ba40
  lexer15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\""#) -}
2cf807264c7c1213ac238fc4d62f9a79
  lexer16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/"#) -}
2620363e3ad6c941f0cf57301d6d6825
  lexer17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*"#) -}
42cc0053c29388df5d3e0e280b376236
  lexer18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-"#) -}
d5b9b12106a9a2ca3287e83cfbbf4659
  lexer19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "+"#) -}
c0c990bc701602d4a1cdc8c243ec4c0e
  lexer2 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer27
                   TigerLexer.lexer3) -}
938e08c909a35af0247acb7439af2344
  lexer20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<>"#) -}
c1657e99a3378405851f3f42197231e3
  lexer21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">="#) -}
fbf1d5b525eec43d92f33787b29135e1
  lexer22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">"#) -}
e5ed9a183791ce422bab3611fc73c528
  lexer23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<="#) -}
c2a44ebb0eaaca8cc1158001f7c76d9f
  lexer24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<"#) -}
30f769f1cbfadbd306ff712888c51f5a
  lexer25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "|"#) -}
c5c69dc885d1e1cb95d2e5b65a224307
  lexer26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "&"#) -}
366eb7b52c1a464132b56ad78ed909a0
  lexer27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "="#) -}
565088a6869dc9e8f2b635e75d033d0a
  lexer28 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer63
                   TigerLexer.lexer29) -}
750561288f5dbb524e124f9af666a966
  lexer29 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer62
                   TigerLexer.lexer30) -}
8fb3098051f34ee4e5d67a44d0e08d7e
  lexer3 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer26
                   TigerLexer.lexer4) -}
1f92b857ff286ef076ef5cdb50cb207f
  lexer30 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer61
                   TigerLexer.lexer31) -}
8366ae11445493586ec859c0f4fc79b6
  lexer31 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer60
                   TigerLexer.lexer32) -}
fb489d5bfc4416982de0586ea778a02d
  lexer32 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer59
                   TigerLexer.lexer33) -}
2b391e84effe808fafaf483ac05c1696
  lexer33 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer58
                   TigerLexer.lexer34) -}
93fd92da7ff7f32c41c23cb890ee3efc
  lexer34 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer57
                   TigerLexer.lexer35) -}
11130d7b425713f64a9949395848f83e
  lexer35 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer56
                   TigerLexer.lexer36) -}
813316b4c26bdbf572db210680ab5f1e
  lexer36 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer55
                   TigerLexer.lexer37) -}
2c70b7e4b831c71b662f3f3358dc9654
  lexer37 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer54
                   TigerLexer.lexer38) -}
dbb52a208ec42ca30b12f01671ccc011
  lexer38 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer53
                   TigerLexer.lexer39) -}
9ff0043389db50380ee18856f38f4a14
  lexer39 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer52
                   TigerLexer.lexer40) -}
df90873176382a849100e37ebc0564c1
  lexer4 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer25
                   TigerLexer.lexer5) -}
fb825be952f908eef77515de5f114485
  lexer40 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer51
                   TigerLexer.lexer41) -}
485fb4de7d46f9b826df13c14b51e57c
  lexer41 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer50
                   TigerLexer.lexer42) -}
b87bc6f27d6ef35a0f6d3c6c0eb8811d
  lexer42 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer49
                   TigerLexer.lexer43) -}
d8dddb24fce5b5b8786cb79a6ccca9ba
  lexer43 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer48
                   TigerLexer.lexer44) -}
4af87878724d2bee250968f4388c9b07
  lexer44 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer47
                   TigerLexer.lexer45) -}
2b0d8f9f3bdf1758934648d1fe82a700
  lexer45 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer46
                   (GHC.Types.[] @ GHC.Base.String)) -}
490dfec6d83886cca1e2db39121ed601
  lexer46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "()"#) -}
b57ba08c501570448ec9cd9638783692
  lexer47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nil"#) -}
1b1b8e755dcb27321f0dfb6eaeb34ef7
  lexer48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "break"#) -}
49180ff7c3607e1f5151e7c7412be053
  lexer49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "to"#) -}
6004c3e7c1dc14865efb3b64fecff033
  lexer5 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer24
                   TigerLexer.lexer6) -}
519f1347873c556a427c0396595a8b99
  lexer50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "for"#) -}
014e5b44a6a6a0e6b6a8ba09ab0deb20
  lexer51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "do"#) -}
2141e48e399c4ef88015f54c16503c84
  lexer52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "while"#) -}
f87c1d0c9e30a13e2289a09501623fe1
  lexer53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "else"#) -}
74994f6210e7f889b1c048583305c5bc
  lexer54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "then"#) -}
2ffc3bfc3536f5615d9e3f098e043323
  lexer55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "if"#) -}
e811eae60fa2e202040d76dec3dce04b
  lexer56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "of"#) -}
8d9d9e879a51009a7b00c36e1204381f
  lexer57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "array"#) -}
2ac8697609793e7d6ec8c3916008bf1d
  lexer58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "type"#) -}
c1ede4e85ab996c120f58f6b09355ee6
  lexer59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "function"#) -}
5a6ba8328372033f23d2c15f3704f465
  lexer6 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer23
                   TigerLexer.lexer7) -}
5ab977abe228fc216cacb07193e6787d
  lexer60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "in"#) -}
0f1f351a8a749b143a550de8aba9249e
  lexer61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "end"#) -}
409317680a4527a52295e588f4be50e7
  lexer62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "let"#) -}
233e919f1ecc964c82811dd3ecc103d9
  lexer63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "var"#) -}
4070bd0d4d9dc209118aa74a0bd02acb
  lexer64 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TigerLexer.lexer65) -}
92d22591f632d19de0ab802c1e10543e
  lexer65 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '='#) -}
dcbdf18b7937cafe39c83cd1aa597b1c
  lexer66 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot] ->
                 case eta of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TigerLexer.lexer67
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   eta1
                   eta4 } }) -}
d9571f1a9793f83b1851ebe43015ff78
  lexer67 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1,
     Unfolding: (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   TigerLexer.lexer_cs) -}
2768349c213a9fe441b957a6ba2941a1
  lexer68 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (cok :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 case s1 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isAlphaNum
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   cok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    let {
                      err1 :: Text.Parsec.Error.ParseError
                      = case err of ww11 { Text.Parsec.Error.ParseError ww12 ww13 ->
                        case Text.Parsec.Prim.$wsetExpectErrors
                               ww12
                               ww13
                               TigerLexer.lexer_msgs of ww14 { (#,#) ww15 ww16 ->
                        Text.Parsec.Error.ParseError ww15 ww16 } }
                    } in
                    TigerLexer.lexer_n
                      `cast`
                    (Text.Parsec.Prim.N:ParsecT[0]
                         <GHC.Base.String>_R
                         <()>_R
                         <Data.Functor.Identity.Identity>_R
                         <GHC.Types.Char>_R)
                      @ b
                      ww
                      cok
                      cerr
                      (\ (y :: GHC.Types.Char)
                         (s' :: Text.Parsec.Prim.State GHC.Base.String ())
                         (err' :: Text.Parsec.Error.ParseError) ->
                       eok y s' (Text.Parsec.Error.mergeError err1 err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err1 err'))) } }) -}
93a9a2cce6c17062f64cbd1ac4529b84
  lexer69 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '_'#) -}
84e358d1901b0953408c822132017ad5
  lexer7 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer22
                   TigerLexer.lexer8) -}
a33382200e20ed435ac16394f72452a7
  lexer70 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot] ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   TigerLexer.lexer72
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TigerLexer.lexer71
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
6679018557f4df9caf75920487ce0197
  lexer71 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.letter2
                   (GHC.Types.[] @ GHC.Base.String)) -}
10e7c0f1cd21fd11ae4bf41be36aaa37
  lexer72 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())[OneShot]
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w5 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot] ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isAlpha
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
bd0fd907dfa8e538168dad7e364ae395
  lexer73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*/"#) -}
d8f0e675d1c05fa590143da07b16b39a
  lexer74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/*"#) -}
03286d1c2c9b736ff0780d75ac688d06
  lexer8 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer21
                   TigerLexer.lexer9) -}
2524dc5970399db1a0393054de88f132
  lexer9 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer20
                   TigerLexer.lexer10) -}
cae9955b07e5444765ea4e95b58d2a32
  lexer_cs :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":,;=&|<=>+-*/."#) -}
04b51673846057b7ceb10dc74c03b024
  lexer_msgs :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.alphaNum2
                   (GHC.Types.[] @ GHC.Base.String)) -}
3e2f34bd5370e0695d48da2b4bcd9030
  lexer_n ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TigerLexer.lexer69) -}
1de618948468e6d5fde4531627866b3b
  number ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Int
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                TigerLexer.number1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Int>_R)) -}
2d670eecaae31b33c6e78f721ecc1b02
  number1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds7
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Integer.Type.Integer>_R)
                   @ b1
                   s1
                   (\ (x :: GHC.Integer.Type.Integer)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (case GHC.Integer.Type.integerToInt x of wild1 { DEFAULT ->
                       GHC.Types.I# wild1 })
                      s2
                      (case s2 of wild1 { Text.Parsec.Prim.State ds37 ds38 ds39 ->
                       case ds38 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: GHC.Integer.Type.Integer)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eok
                      (case GHC.Integer.Type.integerToInt x of wild1 { DEFAULT ->
                       GHC.Types.I# wild1 })
                      s2
                      (case s2 of wild1 { Text.Parsec.Prim.State ds37 ds38 ds39 ->
                       case ds38 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr }) -}
a37383dc3e0857664cd259d846d85468
  parens ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds16 @ a }) -}
899f8205c8bf2dc256f1a543ffd65c73
  reserved ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 }) -}
c6aaf8c0618b68dae712533e0426230d
  reservedOp ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 }) -}
a17bdf0144d6fde8690912e0f2fd9543
  semiSep ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds25 @ a }) -}
08bcd9cbe63aaac25200da41e42e0cde
  semiSep1 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds26 @ a }) -}
a69c8b423cd6f53d6d79154f3e9f4cb0
  stringLiteral ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds6 }) -}
fa07faa1f52d3c7d2064fe917dba3d5b
  symbol ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds14 }) -}
d1e36ce984bd2245a0d6499f825ac3fd
  toInt :: GHC.Integer.Type.Integer -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Num.$fNumInt_$cfromInteger -}
0c3ebb981a160be58d1b08a7e5b9a1dd
  whiteSpace ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds16 }) -}
"SPEC/TigerLexer $fStream[]mtok @ Identity _" [ALWAYS] forall @ tok
                                                              ($dMonad :: GHC.Base.Monad
                                                                            Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  $dMonad
  = TigerLexer.$s$fStream[]mtok @ tok
"SPEC/TigerLexer $fStream[]mtok_$cp1Stream @ Identity _" [ALWAYS] forall @ tok
                                                                         ($dMonad :: GHC.Base.Monad
                                                                                       Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cp1Stream @ Data.Functor.Identity.Identity
                                             @ tok
                                             $dMonad
  = TigerLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok
"SPEC/TigerLexer $fStream[]mtok_$cuncons @ Identity _" [ALWAYS] forall @ tok
                                                                       ($dMonad :: GHC.Base.Monad
                                                                                     Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = TigerLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

