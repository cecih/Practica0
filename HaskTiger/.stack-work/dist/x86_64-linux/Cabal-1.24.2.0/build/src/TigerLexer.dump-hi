
==================== FINAL INTERFACE ====================
2017-09-02 01:27:02.654679 UTC

interface HaskTiger-0.1.0.0-8sS9j76S4uUE6NaT8hRlFo:TigerLexer 8002
  interface hash: 0a399fb301152803af63b2ff582cf126
  ABI hash: 4c48dd028ad479b7c8ab84f94a04d3d6
  export-list hash: 19bb51edf6cf75046d53bca37d4a10a0
  orphan hash: 2f19b96b625a1b27da66b976fd32e817
  flag hash: ab396f11155bd696ab63895436e6f1df
  sig of: Nothing
  used TH splices: False
  where
exports:
  TigerLexer.braces
  TigerLexer.brackets
  TigerLexer.colon
  TigerLexer.commaSep
  TigerLexer.commaSep1
  TigerLexer.dot
  TigerLexer.identifier
  TigerLexer.lexer
  TigerLexer.number
  TigerLexer.parens
  TigerLexer.reserved
  TigerLexer.reservedOp
  TigerLexer.semiSep
  TigerLexer.semiSep1
  TigerLexer.stringLiteral
  TigerLexer.symbol
  TigerLexer.toInt
  TigerLexer.whiteSpace
module dependencies: TigerAbs TigerSymbol
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00*
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  TigerAbs 4ed839e0ff39f27894975a9e85c5e0b9
  exports: 36ecbae58ceb49a736590352cce7edab
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  integer-gmp-1.0.0.1:GHC.Integer.Type 318df275d77dcdb18e0006d8d7870c2a
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec 249f98b8bd0396476db9ec1e5f439e1e
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec.Char 90d109d9d69f9af668227aee4dafb263
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec.Prim 0d878ba04cd6efa06cce29fd3cc148ae
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec.Text 508773a45f8ae771a71f3cd67fb9a1ec
import  -/  parsec-3.1.11@parsec-3.1.11-1aqiimsgq2dCv7eoaC8WuX:Text.Parsec.Token b070652ff6120fb71deaf8e05f05fb2c
import  -/  text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text e8aa34be3dde178f567ae461e65c988b
6154b99da11fc229e618417ca804179c
  $s$fStream[]mtok ::
    Text.Parsec.Prim.Stream [tok] Data.Functor.Identity.Identity tok
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ tok.
                  @ [tok]
                  @ Data.Functor.Identity.Identity
                  @ tok
                  (TigerLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok)
                  (TigerLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok) -}
cf74240434801c2a3fc02efd311f502f
  $s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream ::
    GHC.Base.Monad Data.Functor.Identity.Identity
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ tok -> Data.Functor.Identity.$fMonadIdentity) -}
85f550585b4112da9da7aae255944563
  $s$fStream[]mtok_$s$fStream[]mtok_$cuncons ::
    [tok]
    -> Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok]))
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ tok (ds :: [tok]) ->
                 case ds of wild {
                   []
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Nothing @ (tok, [tok]))
                   : t ts
                   -> GHC.Base.$
                        @ 'GHC.Types.PtrRepLifted
                        @ (GHC.Base.Maybe (tok, [tok]))
                        @ (Data.Functor.Identity.Identity (GHC.Base.Maybe (tok, [tok])))
                        (Data.Functor.Identity.$fApplicativeIdentity_$cpure
                           @ (GHC.Base.Maybe (tok, [tok])))
                        (GHC.Base.Just @ (tok, [tok]) (t, ts)) }) -}
7365796d028a3ae9c8ff68ace0d02a68
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   TigerLexer.$trModule2
                   TigerLexer.$trModule1) -}
1291e3c96244fb5660fc9ca3f7c0f55f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TigerLexer"#) -}
0da80105dc8f2b1d2760d4e7b0f24be2
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "HaskTiger-0.1.0.0-8sS9j76S4uUE6NaT8hRlFo"#) -}
cce41587174ed38b8525e031b9e88d8b
  braces ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds17 @ a }) -}
2d4d7e9d29fa5f3b60c052c83e960962
  brackets ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds19 @ a }) -}
8fedf4626c57c944c6d02e9c25f439a1
  colon ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds24 }) -}
bfc20124fd6ab4167b51e4501db1e76b
  commaSep ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds27 @ a }) -}
f3da77b34196afa72de1635341e8e5ee
  commaSep1 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds28 @ a }) -}
99eb1249a5894d0b7ec285ad06198b75
  dot ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds25 }) -}
cc8610cd807b24d979cccc34d38450f3
  identifier ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds1 }) -}
28434a39c58b61192a598a26908b4e3b
  lexer :: Text.Parsec.Token.TokenParser ()
  {- Unfolding: (Text.Parsec.Token.makeTokenParser
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TigerLexer.lexer1) -}
cc305d60eda38f3f455333bb770ea54e
  lexer1 ::
    Text.Parsec.Token.GenLanguageDef
      GHC.Base.String () Data.Functor.Identity.Identity
  {- Unfolding: (Text.Parsec.Token.LanguageDef
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   TigerLexer.lexer74
                   TigerLexer.lexer73
                   (GHC.Types.[] @ GHC.Types.Char)
                   GHC.Types.True
                   TigerLexer.lexer70
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TigerLexer.lexer68
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TigerLexer.lexer66
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TigerLexer.lexer64
                   TigerLexer.lexer28
                   TigerLexer.lexer2
                   GHC.Types.False) -}
6a425da96a54b348b1eb598c2abe12d8
  lexer10 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer19
                   TigerLexer.lexer11) -}
c4419c4a568f8cee2227fa65ae75826d
  lexer11 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer18
                   TigerLexer.lexer12) -}
f3a22deeae3a1559a65719d9af452775
  lexer12 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer17
                   TigerLexer.lexer13) -}
6f4282f8efd09c3571824a4f3f9a1fc2
  lexer13 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer16
                   TigerLexer.lexer14) -}
d1b848a3961cc4400a2eff1b91d03564
  lexer14 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer15
                   (GHC.Types.[] @ GHC.Base.String)) -}
2311ef02ed9c60df08b370fbfa311796
  lexer15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "\""#) -}
3bea8dd47752c2faa94231ef2c60376f
  lexer16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/"#) -}
b16f9c3c8f780d4158e6e219c0651ed1
  lexer17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*"#) -}
290fb16081c8ca8654badacf483b41bd
  lexer18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-"#) -}
5852424c9b7797094ea87f4e402e7b09
  lexer19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "+"#) -}
20591d4e6ea533f829295e78c92a04ff
  lexer2 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer27
                   TigerLexer.lexer3) -}
05f0174d5d8d41d3fa0b980f71866c14
  lexer20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<>"#) -}
2b595692f1305a5178495d769c93a22e
  lexer21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">="#) -}
7f2c408925101190fd7a9eb39ca10673
  lexer22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">"#) -}
0fda341267426b56977fa95c6374f808
  lexer23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<="#) -}
369ff28bfcbe1a6390ccba6deee30067
  lexer24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<"#) -}
ba195dd2305a41359420b3a369858274
  lexer25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "|"#) -}
053598ace5c85e438b40b6928448fc1f
  lexer26 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "&"#) -}
8209cfe0f0c8079f11240237d043909d
  lexer27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "="#) -}
c66f93a9d023bc5448b0c77d06272f45
  lexer28 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer63
                   TigerLexer.lexer29) -}
57e453146c651accd3b0082fed19b57c
  lexer29 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer62
                   TigerLexer.lexer30) -}
4819f70ff12640e42ee2670a78449407
  lexer3 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer26
                   TigerLexer.lexer4) -}
63c54910f53dabc793a0f022e9f16539
  lexer30 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer61
                   TigerLexer.lexer31) -}
647e814e7bbb6f90c0b6c5bf2e3e5483
  lexer31 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer60
                   TigerLexer.lexer32) -}
cc28d59cec9db031eae0295b2910f2cc
  lexer32 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer59
                   TigerLexer.lexer33) -}
6564900feb53799f77e8884844500fc8
  lexer33 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer58
                   TigerLexer.lexer34) -}
b77a83bcffd425ae30975cd0e8f9d412
  lexer34 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer57
                   TigerLexer.lexer35) -}
272fe39a8ffc1949f9bace543994ce33
  lexer35 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer56
                   TigerLexer.lexer36) -}
75007e244b3c4507dfe48167a655fd7f
  lexer36 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer55
                   TigerLexer.lexer37) -}
e6f3aa4c3a01d7f26336dbd77e13799f
  lexer37 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer54
                   TigerLexer.lexer38) -}
ee475470b80b281ca2466eddb8dad9f0
  lexer38 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer53
                   TigerLexer.lexer39) -}
e08e0b7979c09019ea6750b86392d6f6
  lexer39 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer52
                   TigerLexer.lexer40) -}
8b35b1af89fba66a6c7ecc24bcc3effc
  lexer4 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer25
                   TigerLexer.lexer5) -}
bfcd57cf946198e2b3e4e15572b546df
  lexer40 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer51
                   TigerLexer.lexer41) -}
09c8e85cadd6bdd7ac30c32a26877c0a
  lexer41 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer50
                   TigerLexer.lexer42) -}
a91ed7252ae4861540380b713075dbea
  lexer42 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer49
                   TigerLexer.lexer43) -}
1f39447ce6898623773618b5c9508b1c
  lexer43 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer48
                   TigerLexer.lexer44) -}
4e28f96a65b5de47d0d4c3bb424ba410
  lexer44 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer47
                   TigerLexer.lexer45) -}
23e772a1af4c26717a7cef49ccfde5fe
  lexer45 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer46
                   (GHC.Types.[] @ GHC.Base.String)) -}
a89a9006a32278ae7415b96948bf474a
  lexer46 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "()"#) -}
90b1fd2adae6e62804a1249e12b5b202
  lexer47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nil"#) -}
83373764d687ae78a1591b6af3a90991
  lexer48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "break"#) -}
01f1c5f85df4c6adab38de6cc2d9c60c
  lexer49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "to"#) -}
a8cbd4cef7cc4070b0f08a5ff0618b65
  lexer5 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer24
                   TigerLexer.lexer6) -}
2f41e9a808b3e0140d44db0402bf1e3e
  lexer50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "for"#) -}
7c208f28ad0eb0bd101fadb18ef0978c
  lexer51 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "do"#) -}
f3e54f59f9773bc97530e1dbcfef28a2
  lexer52 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "while"#) -}
b1376a70751768bbc29d1dfacbc0d307
  lexer53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "else"#) -}
72c45be22c3a77a55a7fb043db941af0
  lexer54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "then"#) -}
b2862a8d3ee13ebe7b9113bf254d9313
  lexer55 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "if"#) -}
12c9f42eeb14e8baf659458a0694c658
  lexer56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "of"#) -}
4f3db6b22d0bbfe2e086286e76425cc1
  lexer57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "array"#) -}
a3d4368f6d1e2d039ef88f3f33aae9f0
  lexer58 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "type"#) -}
814b4b454b81ac9fe012bc660a8b7be9
  lexer59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "function"#) -}
353e8848c1e17e6724df15bc860ae32f
  lexer6 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer23
                   TigerLexer.lexer7) -}
47fa3f9f01e72575fd24a7eb165760fd
  lexer60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "in"#) -}
31e7068c13b74ca98b1627a6f7a8aaf9
  lexer61 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "end"#) -}
e95b963ab6acab692421fc4a4d86498f
  lexer62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "let"#) -}
82c06861d8b34d12692b9224b00d22b8
  lexer63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "var"#) -}
b50e3562cb4d9aafa32d42e88c6216ae
  lexer64 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TigerLexer.lexer65) -}
350aa21128f8146799f5a42baa5c0783
  lexer65 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '='#) -}
459c0ddb6990994846bb56d76422c1ae
  lexer66 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot] ->
                 case eta of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TigerLexer.lexer67
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   eta1
                   eta4 } }) -}
f3e18011c751ce2c6a36765be19d6dcf
  lexer67 :: GHC.Types.Char -> GHC.Types.Bool
  {- Arity: 1,
     Unfolding: (\ (c :: GHC.Types.Char) ->
                 GHC.List.elem
                   @ GHC.Types.Char
                   GHC.Classes.$fEqChar
                   c
                   TigerLexer.lexer_cs) -}
b378d1e4e9b72068e936d7585c76c057
  lexer68 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (s1 :: Text.Parsec.Prim.State GHC.Base.String ())
                   (cok :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)
                   (eok :: GHC.Types.Char
                           -> Text.Parsec.Prim.State GHC.Base.String ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b) ->
                 case s1 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isAlphaNum
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   cok
                   (\ (err :: Text.Parsec.Error.ParseError) ->
                    let {
                      err1 :: Text.Parsec.Error.ParseError
                      = case err of ww11 { Text.Parsec.Error.ParseError ww12 ww13 ->
                        case Text.Parsec.Prim.$wsetExpectErrors
                               ww12
                               ww13
                               TigerLexer.lexer_msgs of ww14 { (#,#) ww15 ww16 ->
                        Text.Parsec.Error.ParseError ww15 ww16 } }
                    } in
                    TigerLexer.lexer_n
                      `cast`
                    (Text.Parsec.Prim.N:ParsecT[0]
                         <GHC.Base.String>_R
                         <()>_R
                         <Data.Functor.Identity.Identity>_R
                         <GHC.Types.Char>_R)
                      @ b
                      ww
                      cok
                      cerr
                      (\ (y :: GHC.Types.Char)
                         (s' :: Text.Parsec.Prim.State GHC.Base.String ())
                         (err' :: Text.Parsec.Error.ParseError) ->
                       eok y s' (Text.Parsec.Error.mergeError err1 err'))
                      (\ (err' :: Text.Parsec.Error.ParseError) ->
                       eerr (Text.Parsec.Error.mergeError err1 err'))) } }) -}
7c850fd004ea77ef3e586749d425029d
  lexer69 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '_'#) -}
9e05f9cb7046f19522379cd10b8399ed
  lexer7 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer22
                   TigerLexer.lexer8) -}
eadc2748ce877eb4cb13d9391e6bc861
  lexer70 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (eta :: Text.Parsec.Prim.State GHC.Base.String ())
                   (eta1 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta2 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta3 :: GHC.Types.Char
                            -> Text.Parsec.Prim.State GHC.Base.String ()
                            -> Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot]
                   (eta4 :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b)[OneShot] ->
                 Text.Parsec.Prim.<?>2
                   @ GHC.Base.String
                   @ ()
                   @ Data.Functor.Identity.Identity
                   @ GHC.Types.Char
                   TigerLexer.lexer72
                     `cast`
                   (Sym (Text.Parsec.Prim.N:ParsecT[0]
                             <GHC.Base.String>_R
                             <()>_R
                             <Data.Functor.Identity.Identity>_R
                             <GHC.Types.Char>_R))
                   TigerLexer.lexer71
                   @ b
                   eta
                   eta1
                   eta2
                   eta3
                   eta4) -}
e2591298558c2f1384642ba5ba7c9284
  lexer71 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.letter2
                   (GHC.Types.[] @ GHC.Base.String)) -}
bb77703d2e014b1ab6fdb14a82e1727a
  lexer72 ::
    Text.Parsec.Prim.State GHC.Base.String ()
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (GHC.Types.Char
        -> Text.Parsec.Prim.State GHC.Base.String ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Unfolding: (\ @ b
                   (w2 :: Text.Parsec.Prim.State GHC.Base.String ())[OneShot]
                   (w3 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w4 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w5 :: GHC.Types.Char
                          -> Text.Parsec.Prim.State GHC.Base.String ()
                          -> Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot]
                   (w6 :: Text.Parsec.Error.ParseError
                          -> Data.Functor.Identity.Identity b)[OneShot] ->
                 case w2 of ww { Text.Parsec.Prim.State ww1 ww2 ww3 ->
                 case ww2 of ww4 { Text.Parsec.Pos.SourcePos ww5 ww6 ww7 ->
                 Text.Parsec.Char.$wsatisfy
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   GHC.Unicode.isAlpha
                   @ b
                   ww1
                   ww5
                   ww6
                   ww7
                   ww3
                   w3
                   w6 } }) -}
7015a3d8047ee68feb45cc138973cd02
  lexer73 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*/"#) -}
df9931dac9478b53dc93416e9d6a26d3
  lexer74 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/*"#) -}
fd9919443f4407713d8d7650e963d4c8
  lexer8 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer21
                   TigerLexer.lexer9) -}
9a6edef7d1103403e7f8171a6c4716d7
  lexer9 :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   TigerLexer.lexer20
                   TigerLexer.lexer10) -}
a3890689ba0b88af4791615589c395de
  lexer_cs :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":,;=&|<=>+-*/."#) -}
5e08b8ba779a407271be6e912c470514
  lexer_msgs :: [GHC.Base.String]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Base.String
                   Text.Parsec.Char.alphaNum2
                   (GHC.Types.[] @ GHC.Base.String)) -}
25a7d0fa3e56c7e9b5471e105e068026
  lexer_n ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Char
  {- Unfolding: (Text.Parsec.Char.char
                   @ GHC.Base.String
                   @ Data.Functor.Identity.Identity
                   @ ()
                   (TigerLexer.$s$fStream[]mtok @ GHC.Types.Char)
                   TigerLexer.lexer69) -}
0eb3279d28263b6517c5c485dc667a50
  number ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Types.Int
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (0, True, True)
                TigerLexer.number1
                  `cast`
                (Sym (Text.Parsec.Prim.N:ParsecT[0]
                          <[GHC.Types.Char]>_R
                          <()>_R
                          <Data.Functor.Identity.Identity>_R
                          <GHC.Types.Int>_R)) -}
32a6122112268062f87ae2d226f049b5
  number1 ::
    Text.Parsec.Prim.State [GHC.Types.Char] ()
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (GHC.Types.Int
        -> Text.Parsec.Prim.State [GHC.Types.Char] ()
        -> Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Parsec.Error.ParseError
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: (\ @ b1
                   (s1 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                   (cok :: GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (cerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1)
                   (eok :: GHC.Types.Int
                           -> Text.Parsec.Prim.State [GHC.Types.Char] ()
                           -> Text.Parsec.Error.ParseError
                           -> Data.Functor.Identity.Identity b1)
                   (eerr :: Text.Parsec.Error.ParseError
                            -> Data.Functor.Identity.Identity b1) ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds7
                   `cast`
                 (Text.Parsec.Prim.N:ParsecT[0]
                      <[GHC.Types.Char]>_R
                      <()>_R
                      <Data.Functor.Identity.Identity>_R
                      <GHC.Integer.Type.Integer>_R)
                   @ b1
                   s1
                   (\ (x :: GHC.Integer.Type.Integer)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    cok
                      (case GHC.Integer.Type.integerToInt x of wild1 { DEFAULT ->
                       GHC.Types.I# wild1 })
                      s2
                      (case s2 of wild1 { Text.Parsec.Prim.State ds37 ds38 ds39 ->
                       case ds38 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   cerr
                   (\ (x :: GHC.Integer.Type.Integer)
                      (s2 :: Text.Parsec.Prim.State [GHC.Types.Char] ())
                      (err :: Text.Parsec.Error.ParseError) ->
                    eok
                      (case GHC.Integer.Type.integerToInt x of wild1 { DEFAULT ->
                       GHC.Types.I# wild1 })
                      s2
                      (case s2 of wild1 { Text.Parsec.Prim.State ds37 ds38 ds39 ->
                       case ds38 of ww10 { Text.Parsec.Pos.SourcePos ww11 ww12 ww13 ->
                       case err of ww { Text.Parsec.Error.ParseError ww1 ww2 ->
                       case ww1 of ww3 { Text.Parsec.Pos.SourcePos ww4 ww5 ww6 ->
                       case Text.Parsec.Error.$wmergeError
                              ww4
                              ww5
                              ww6
                              ww2
                              ww11
                              ww12
                              ww13
                              (GHC.Types.[]
                                 @ Text.Parsec.Error.Message) of ww14 { (#,#) ww15 ww16 ->
                       Text.Parsec.Error.ParseError ww15 ww16 } } } } }))
                   eerr }) -}
bf837a01ea59d8814eee1d33547d6b7e
  parens ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity a
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds16 @ a }) -}
e55bc612190d0e302cac4285765fd629
  reserved ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds2 }) -}
d1424cdd7254ee1108d43d1db41de217
  reservedOp ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds4 }) -}
ee41f21dbd6baaa41b63461a4bcc0522
  semiSep ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds25 @ a }) -}
272ef2e9424e237fdc341ade0a498590
  semiSep1 ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity a
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity [a]
  {- Unfolding: (\ @ a ->
                 case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ->
                 ds26 @ a }) -}
06ec7290e7bb224310af405523c54d16
  stringLiteral ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds6 }) -}
ba0cfcf0fcdc2eaf547ebc4e85b9c0b0
  symbol ::
    GHC.Base.String
    -> Text.Parsec.Prim.ParsecT
         GHC.Base.String () Data.Functor.Identity.Identity GHC.Base.String
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds14 }) -}
fec8855c98fff25ef11e1b2c3128ecf6
  toInt :: GHC.Integer.Type.Integer -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (0, True, True)
                GHC.Num.$fNumInt_$cfromInteger -}
ae597ff8ededfb209a88bda69e75b3dd
  whiteSpace ::
    Text.Parsec.Prim.ParsecT
      GHC.Base.String () Data.Functor.Identity.Identity ()
  {- Unfolding: (case TigerLexer.lexer of wild { Text.Parsec.Token.TokenParser ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ds19 ds20 ds21 ds22 ds23 ds24 ds25 ds26 ds27 ds28 ds29 ->
                 ds16 }) -}
"SPEC/TigerLexer $fStream[]mtok @ Identity _" [ALWAYS] forall @ tok
                                                              ($dMonad :: GHC.Base.Monad
                                                                            Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok @ Data.Functor.Identity.Identity
                                  @ tok
                                  $dMonad
  = TigerLexer.$s$fStream[]mtok @ tok
"SPEC/TigerLexer $fStream[]mtok_$cp1Stream @ Identity _" [ALWAYS] forall @ tok
                                                                         ($dMonad :: GHC.Base.Monad
                                                                                       Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cp1Stream @ Data.Functor.Identity.Identity
                                             @ tok
                                             $dMonad
  = TigerLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cp1Stream @ tok
"SPEC/TigerLexer $fStream[]mtok_$cuncons @ Identity _" [ALWAYS] forall @ tok
                                                                       ($dMonad :: GHC.Base.Monad
                                                                                     Data.Functor.Identity.Identity)
  Text.Parsec.Prim.$fStream[]mtok_$cuncons @ Data.Functor.Identity.Identity
                                           @ tok
                                           $dMonad
  = TigerLexer.$s$fStream[]mtok_$s$fStream[]mtok_$cuncons @ tok
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

