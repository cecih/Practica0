a) a := 10

AssignExp (SimpleVar "a") (IntExp 10 Pos) Pos

b) for i := 0 to c do print (".")

ForExp ??? ??? (IntExp 0 Pos) ??? (CallExp "print" [StringExp "." Pos] Pos)

c) f[a+1].data[0]

VarExp (FieldVar (SubscriptVar (SimpleVar "f") (OpExp (VarExp (SimpleVar "a") Pos) PlusOp (IntExp 1 Pos) Pos)) "") ???

d) let var f := 10 in f(f, f); f end

LetExp [VarDec "f" ??? ??? (IntExp 10 Pos) Pos] (SeqExp [CallExp "f" [VarExp (SimpleVar "f") Pos, VarExp (SimpleVar "f") Post] Pos, VarExp (SimpleVar "f")]) Pos

e) type lista = {item:int, resto:lista}

TypeDec [("lista", RecordTy [("item", ???, NameTy "int"), ("lista", ???, NameTy "lista")],Pos)]

f) if row[r] = 0 & a < b then g(r)

IfExp (??? (VarExp (SubscriptVar (SimpleVar "row") (SimpleVar "r")) Pos) (OpExp (SimpleVar "a") LtOp (SimpleVar "b"))) (CallExp "g" [SimpleVar "r"] Pos) Nothing Pos


